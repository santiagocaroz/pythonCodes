[
    {
        "id": "fcee8ceb0be2bc0c",
        "type": "tab",
        "label": "Pet",
        "disabled": false,
        "info": "",
        "env": []
    },
    {
        "id": "cd3e5fa981fa1499",
        "type": "tab",
        "label": "Room",
        "disabled": false,
        "info": "",
        "env": []
    },
    {
        "id": "f4ae8a2004d0434a",
        "type": "mqtt-broker",
        "name": "",
        "broker": "mqtt.eclipseprojects.io",
        "port": "1883",
        "clientid": "Santi",
        "autoConnect": true,
        "usetls": false,
        "protocolVersion": "4",
        "keepalive": "60",
        "cleansession": true,
        "birthTopic": "",
        "birthQos": "0",
        "birthPayload": "",
        "birthMsg": {},
        "closeTopic": "",
        "closeQos": "0",
        "closePayload": "",
        "closeMsg": {},
        "willTopic": "",
        "willQos": "0",
        "willPayload": "",
        "willMsg": {},
        "sessionExpiry": ""
    },
    {
        "id": "d0dc9be3793c71fd",
        "type": "serial-port",
        "serialport": "/dev/ttyACM0",
        "serialbaud": "57600",
        "databits": "8",
        "parity": "none",
        "stopbits": "1",
        "waitfor": "",
        "dtr": "none",
        "rts": "none",
        "cts": "none",
        "dsr": "none",
        "newline": "\\n",
        "bin": "false",
        "out": "char",
        "addchar": "",
        "responsetimeout": "10000"
    },
    {
        "id": "1f56a247d6e89c24",
        "type": "serial-port",
        "serialport": "/dev/ttyUSB0",
        "serialbaud": "115200",
        "databits": "8",
        "parity": "none",
        "stopbits": "1",
        "waitfor": "",
        "dtr": "none",
        "rts": "none",
        "cts": "none",
        "dsr": "none",
        "newline": ";",
        "bin": "false",
        "out": "char",
        "addchar": "",
        "responsetimeout": "10000"
    },
    {
        "id": "7638e1e52e46ba1c",
        "type": "ui_base",
        "theme": {
            "name": "theme-dark",
            "lightTheme": {
                "default": "#0094CE",
                "baseColor": "#0094CE",
                "baseFont": "-apple-system,BlinkMacSystemFont,Segoe UI,Roboto,Oxygen-Sans,Ubuntu,Cantarell,Helvetica Neue,sans-serif",
                "edited": true,
                "reset": false
            },
            "darkTheme": {
                "default": "#097479",
                "baseColor": "#2b3e50",
                "baseFont": "-apple-system,BlinkMacSystemFont,Segoe UI,Roboto,Oxygen-Sans,Ubuntu,Cantarell,Helvetica Neue,sans-serif",
                "edited": true,
                "reset": false
            },
            "customTheme": {
                "name": "Untitled Theme 1",
                "default": "#4B7930",
                "baseColor": "#4B7930",
                "baseFont": "-apple-system,BlinkMacSystemFont,Segoe UI,Roboto,Oxygen-Sans,Ubuntu,Cantarell,Helvetica Neue,sans-serif"
            },
            "themeState": {
                "base-color": {
                    "default": "#097479",
                    "value": "#2b3e50",
                    "edited": true
                },
                "page-titlebar-backgroundColor": {
                    "value": "#2b3e50",
                    "edited": false
                },
                "page-backgroundColor": {
                    "value": "#111111",
                    "edited": false
                },
                "page-sidebar-backgroundColor": {
                    "value": "#333333",
                    "edited": false
                },
                "group-textColor": {
                    "value": "#466582",
                    "edited": false
                },
                "group-borderColor": {
                    "value": "#555555",
                    "edited": false
                },
                "group-backgroundColor": {
                    "value": "#333333",
                    "edited": false
                },
                "widget-textColor": {
                    "value": "#eeeeee",
                    "edited": false
                },
                "widget-backgroundColor": {
                    "value": "#2b3e50",
                    "edited": false
                },
                "widget-borderColor": {
                    "value": "#333333",
                    "edited": false
                },
                "base-font": {
                    "value": "-apple-system,BlinkMacSystemFont,Segoe UI,Roboto,Oxygen-Sans,Ubuntu,Cantarell,Helvetica Neue,sans-serif"
                }
            },
            "angularTheme": {
                "primary": "indigo",
                "accents": "blue",
                "warn": "red",
                "background": "grey",
                "palette": "light"
            }
        },
        "site": {
            "name": "Node-RED Dashboard",
            "hideToolbar": "true",
            "allowSwipe": "false",
            "lockMenu": "false",
            "allowTempTheme": "true",
            "dateFormat": "DD/MM/YYYY",
            "sizes": {
                "sx": 48,
                "sy": 48,
                "gx": 6,
                "gy": 6,
                "cx": 6,
                "cy": 6,
                "px": 0,
                "py": 0
            }
        }
    },
    {
        "id": "84c909cdc84ec067",
        "type": "serial-port",
        "serialport": "COM3",
        "serialbaud": "9600",
        "databits": "8",
        "parity": "none",
        "stopbits": "1",
        "waitfor": "",
        "dtr": "none",
        "rts": "none",
        "cts": "none",
        "dsr": "none",
        "newline": "\\n",
        "bin": "false",
        "out": "char",
        "addchar": "",
        "responsetimeout": "1000"
    },
    {
        "id": "9444cf7ea2ebe46e",
        "type": "serial-port",
        "serialport": "/dev/ttyS0",
        "serialbaud": "57600",
        "databits": "8",
        "parity": "none",
        "stopbits": "1",
        "waitfor": "",
        "dtr": "none",
        "rts": "none",
        "cts": "none",
        "dsr": "none",
        "newline": "\\n",
        "bin": "false",
        "out": "char",
        "addchar": "",
        "responsetimeout": "10000"
    },
    {
        "id": "01fa7e4063f1a512",
        "type": "serial-port",
        "serialport": "COM6",
        "serialbaud": "115200",
        "databits": "8",
        "parity": "none",
        "stopbits": "1",
        "waitfor": "",
        "dtr": "none",
        "rts": "none",
        "cts": "none",
        "dsr": "none",
        "newline": ";",
        "bin": "false",
        "out": "char",
        "addchar": "",
        "responsetimeout": "10000"
    },
    {
        "id": "6880a04639f024ba",
        "type": "serial-port",
        "serialport": "/dev/ttyS0",
        "serialbaud": "57600",
        "databits": "8",
        "parity": "none",
        "stopbits": "1",
        "waitfor": "",
        "dtr": "none",
        "rts": "none",
        "cts": "none",
        "dsr": "none",
        "newline": "1000",
        "bin": "false",
        "out": "time",
        "addchar": "",
        "responsetimeout": "10000"
    },
    {
        "id": "88933f902f5990a2",
        "type": "serial-port",
        "serialport": "/dev/ttyUSB0",
        "serialbaud": "9600",
        "databits": "8",
        "parity": "none",
        "stopbits": "1",
        "waitfor": "",
        "dtr": "none",
        "rts": "none",
        "cts": "none",
        "dsr": "none",
        "newline": "\\n",
        "bin": "false",
        "out": "char",
        "addchar": "",
        "responsetimeout": "10000"
    },
    {
        "id": "57506bd783794718",
        "type": "serial-port",
        "serialport": "COM3",
        "serialbaud": "9600",
        "databits": "8",
        "parity": "none",
        "stopbits": "1",
        "waitfor": "",
        "dtr": "none",
        "rts": "none",
        "cts": "none",
        "dsr": "none",
        "newline": "\\n",
        "bin": "false",
        "out": "char",
        "addchar": "",
        "responsetimeout": "1000"
    },
    {
        "id": "d097bcef2ed63a3b",
        "type": "serial-port",
        "serialport": "/dev/ttyAMA0",
        "serialbaud": "57600",
        "databits": "8",
        "parity": "none",
        "stopbits": "1",
        "waitfor": "",
        "dtr": "none",
        "rts": "none",
        "cts": "none",
        "dsr": "none",
        "newline": "\\n",
        "bin": "false",
        "out": "char",
        "addchar": "",
        "responsetimeout": "10000"
    },
    {
        "id": "b7e58566aa582bc5",
        "type": "serial-port",
        "serialport": "COM12",
        "serialbaud": "57600",
        "databits": "8",
        "parity": "none",
        "stopbits": "1",
        "waitfor": "",
        "dtr": "none",
        "rts": "none",
        "cts": "none",
        "dsr": "none",
        "newline": "\\n",
        "bin": "false",
        "out": "char",
        "addchar": "",
        "responsetimeout": "10000"
    },
    {
        "id": "ab16e54a0c8f1565",
        "type": "mqtt-broker",
        "name": "",
        "broker": "localhost",
        "port": "1883",
        "clientid": "Santi",
        "autoConnect": true,
        "usetls": false,
        "protocolVersion": "4",
        "keepalive": "60",
        "cleansession": true,
        "birthTopic": "",
        "birthQos": "0",
        "birthPayload": "",
        "birthMsg": {},
        "closeTopic": "",
        "closeQos": "0",
        "closePayload": "",
        "closeMsg": {},
        "willTopic": "",
        "willQos": "0",
        "willPayload": "",
        "willMsg": {},
        "sessionExpiry": ""
    },
    {
        "id": "d911fdb0f4b7aa61",
        "type": "mqtt-broker",
        "name": "",
        "broker": "mqtt.eclipseprojects.io",
        "port": "1883",
        "clientid": "Sadaf",
        "autoConnect": true,
        "usetls": false,
        "protocolVersion": "4",
        "keepalive": "60",
        "cleansession": true,
        "birthTopic": "",
        "birthQos": "0",
        "birthPayload": "",
        "birthMsg": {},
        "closeTopic": "",
        "closeQos": "0",
        "closePayload": "",
        "closeMsg": {},
        "willTopic": "",
        "willQos": "0",
        "willPayload": "",
        "willMsg": {},
        "sessionExpiry": ""
    },
    {
        "id": "74ca6864b032e9dc",
        "type": "mqtt-broker",
        "name": "",
        "broker": "mqtt3.thingspeak.com",
        "port": "1883",
        "clientid": "SADAF",
        "autoConnect": true,
        "usetls": false,
        "protocolVersion": "4",
        "keepalive": "60",
        "cleansession": true,
        "birthTopic": "",
        "birthQos": "0",
        "birthPayload": "",
        "birthMsg": {},
        "closeTopic": "",
        "closeQos": "0",
        "closePayload": "",
        "closeMsg": {},
        "willTopic": "",
        "willQos": "0",
        "willPayload": "",
        "willMsg": {},
        "sessionExpiry": ""
    },
    {
        "id": "b81d24f7563ea13a",
        "type": "mqtt-broker",
        "name": "Thingspeak",
        "broker": "mqtt3.thingspeak.com",
        "port": "1883",
        "clientid": "NgESNSEsDxMBCAwKAgs2Ihw",
        "autoConnect": true,
        "usetls": false,
        "protocolVersion": "4",
        "keepalive": "60",
        "cleansession": true,
        "birthTopic": "",
        "birthQos": "0",
        "birthPayload": "",
        "birthMsg": {},
        "closeTopic": "",
        "closeQos": "0",
        "closePayload": "",
        "closeMsg": {},
        "willTopic": "",
        "willQos": "0",
        "willPayload": "",
        "willMsg": {},
        "sessionExpiry": ""
    },
    {
        "id": "132a9c2a573d271c",
        "type": "mqtt-broker",
        "name": "",
        "broker": "mqtt.eclipseprojects.io",
        "port": "1883",
        "clientid": "",
        "autoConnect": true,
        "usetls": false,
        "protocolVersion": "4",
        "keepalive": "60",
        "cleansession": true,
        "birthTopic": "",
        "birthQos": "0",
        "birthPayload": "",
        "birthMsg": {},
        "closeTopic": "",
        "closeQos": "0",
        "closePayload": "",
        "closeMsg": {},
        "willTopic": "",
        "willQos": "0",
        "willPayload": "",
        "willMsg": {},
        "sessionExpiry": ""
    },
    {
        "id": "db6cfc5ecfae95b9",
        "type": "ui_group",
        "name": "Temperature",
        "tab": "43fdea7035d5231f",
        "order": 1,
        "disp": true,
        "width": "6",
        "collapse": false,
        "className": ""
    },
    {
        "id": "b70e043ef0520b2b",
        "type": "ui_group",
        "name": "Mass food",
        "tab": "43fdea7035d5231f",
        "order": 2,
        "disp": true,
        "width": "6",
        "collapse": false,
        "className": ""
    },
    {
        "id": "d249e447cf927179",
        "type": "ui_group",
        "name": "Mass water",
        "tab": "43fdea7035d5231f",
        "order": 3,
        "disp": true,
        "width": "6",
        "collapse": false,
        "className": ""
    },
    {
        "id": "bd2715e9133e36a8",
        "type": "mqtt-broker",
        "name": "",
        "broker": "mqtt.eclipseprojects.io",
        "port": "1883",
        "clientid": "",
        "autoConnect": true,
        "usetls": false,
        "protocolVersion": "4",
        "keepalive": "60",
        "cleansession": true,
        "birthTopic": "",
        "birthQos": "0",
        "birthPayload": "",
        "birthMsg": {},
        "closeTopic": "",
        "closeQos": "0",
        "closePayload": "",
        "closeMsg": {},
        "willTopic": "",
        "willQos": "0",
        "willPayload": "",
        "willMsg": {},
        "sessionExpiry": ""
    },
    {
        "id": "43fdea7035d5231f",
        "type": "ui_tab",
        "name": "System",
        "icon": "dashboard",
        "disabled": false,
        "hidden": false
    },
    {
        "id": "621a1523e12cb8ed",
        "type": "ui_group",
        "name": "Location",
        "tab": "43fdea7035d5231f",
        "order": 4,
        "disp": true,
        "width": "6",
        "collapse": false,
        "className": ""
    },
    {
        "id": "9d526a34a2008886",
        "type": "ui_group",
        "name": "heart and respiration",
        "tab": "43fdea7035d5231f",
        "order": 5,
        "disp": true,
        "width": "6",
        "collapse": false,
        "className": ""
    },
    {
        "id": "f83866e20b4eca41",
        "type": "ui_group",
        "name": "pet temperature",
        "tab": "43fdea7035d5231f",
        "order": 6,
        "disp": true,
        "width": "6",
        "collapse": false,
        "className": ""
    },
    {
        "id": "7e23bf2fa036a110",
        "type": "inject",
        "z": "fcee8ceb0be2bc0c",
        "d": true,
        "name": "",
        "props": [
            {
                "p": "payload"
            },
            {
                "p": "topic",
                "vt": "str"
            }
        ],
        "repeat": "2",
        "crontab": "",
        "once": false,
        "onceDelay": 0.1,
        "topic": "",
        "payload": "",
        "payloadType": "date",
        "x": 230,
        "y": 100,
        "wires": [
            [
                "5d228ff1cd6600ab"
            ]
        ]
    },
    {
        "id": "b062beb6511a3ef2",
        "type": "python3-function",
        "z": "fcee8ceb0be2bc0c",
        "name": "location",
        "func": "import random\nfrom datetime import datetime \nimport json\nif  msg[\"payload\"]==True:\n    latitude = random.uniform(-0.01, +0.01)\n    longitude = random.uniform(-0.01, +0.01)\n    now = datetime.now()\n    msg[\"payload\"]={\"latitude\":latitude,\"longitude\":longitude,\n                    \"time\": str(now.strftime(\"%Y.%m.%d.%H.%M.%S\"))}\n    \n    msg[\"topic\"]=\"project/publish/pet/lillo/1/location\"\n    # msg[\"topic\"]=\"sacaza/ej\"\nelse:\n    latitude = random.uniform(-0.05, +0.05)\n    longitude = random.uniform(-0.05, +0.05)\n    now = datetime.now()\n    msg[\"payload\"]={\"out\":\"yes\",\"latitude\":latitude,\"longitude\":longitude,\n                    \"time\": str(now.strftime(\"%Y.%m.%d.%H.%M.%S\"))}\n   \n    msg[\"topic\"]=\"project/publish/pet/lillo/1/location\"\n    \nreturn msg",
        "outputs": 1,
        "x": 520,
        "y": 100,
        "wires": [
            [
                "2198dfd6e8f92ff9",
                "f90123d1279afae9"
            ]
        ]
    },
    {
        "id": "2198dfd6e8f92ff9",
        "type": "mqtt out",
        "z": "fcee8ceb0be2bc0c",
        "name": "",
        "topic": "",
        "qos": "",
        "retain": "",
        "respTopic": "",
        "contentType": "",
        "userProps": "",
        "correl": "",
        "expiry": "",
        "broker": "f4ae8a2004d0434a",
        "x": 690,
        "y": 100,
        "wires": []
    },
    {
        "id": "f90123d1279afae9",
        "type": "debug",
        "z": "fcee8ceb0be2bc0c",
        "name": "",
        "active": true,
        "tosidebar": true,
        "console": false,
        "tostatus": false,
        "complete": "false",
        "statusVal": "",
        "statusType": "auto",
        "x": 710,
        "y": 160,
        "wires": []
    },
    {
        "id": "d74fdbbfb1b0b5d0",
        "type": "comment",
        "z": "fcee8ceb0be2bc0c",
        "name": "Location",
        "info": "",
        "x": 230,
        "y": 60,
        "wires": []
    },
    {
        "id": "d4e8db1c818f6fd9",
        "type": "comment",
        "z": "fcee8ceb0be2bc0c",
        "name": "health - DA FARE",
        "info": "",
        "x": 250,
        "y": 240,
        "wires": []
    },
    {
        "id": "bd1530c61183d6c3",
        "type": "csv",
        "z": "fcee8ceb0be2bc0c",
        "name": "",
        "sep": " ",
        "hdrin": "",
        "hdrout": "none",
        "multi": "mult",
        "ret": "\\n",
        "temp": "",
        "skip": "0",
        "strings": true,
        "include_empty_strings": "",
        "include_null_values": "",
        "x": 510,
        "y": 400,
        "wires": [
            [
                "e6057462abb99a6c"
            ]
        ]
    },
    {
        "id": "543aba8fcf218e1c",
        "type": "file in",
        "z": "fcee8ceb0be2bc0c",
        "name": "",
        "filename": "/home/pi/Desktop/data.csv",
        "format": "utf8",
        "chunk": false,
        "sendError": false,
        "encoding": "none",
        "allProps": false,
        "x": 340,
        "y": 440,
        "wires": [
            [
                "bd1530c61183d6c3"
            ]
        ]
    },
    {
        "id": "1e9f435f29e202b7",
        "type": "inject",
        "z": "fcee8ceb0be2bc0c",
        "name": "",
        "props": [
            {
                "p": "payload"
            },
            {
                "p": "topic",
                "vt": "str"
            }
        ],
        "repeat": "",
        "crontab": "",
        "once": false,
        "onceDelay": 0.1,
        "topic": "",
        "payload": "",
        "payloadType": "date",
        "x": 120,
        "y": 440,
        "wires": [
            [
                "543aba8fcf218e1c"
            ]
        ]
    },
    {
        "id": "22e1f1b945f5183e",
        "type": "debug",
        "z": "fcee8ceb0be2bc0c",
        "name": "",
        "active": true,
        "tosidebar": true,
        "console": false,
        "tostatus": false,
        "complete": "payload",
        "targetType": "msg",
        "statusVal": "",
        "statusType": "auto",
        "x": 850,
        "y": 440,
        "wires": []
    },
    {
        "id": "886786022501e0f1",
        "type": "python3-function",
        "z": "fcee8ceb0be2bc0c",
        "name": "",
        "func": "import random\nfrom datetime import datetime \nimport json\n\nn = random.randint(0,2)  # genero un numero random per selezionare il file da leggere\nif msg[\"rate\"]==True:\n    n=0\nelse:\n    n = random.randint(1,2)\n \n\nmy_data = [msg[\"payload\"][i][\"col1\"].split(\";\") for i in range(len(msg[\"payload\"]))]\ndata = [float(my_data[i][n]) for i in range(len(my_data))]\n\nnow = datetime.now()\nmsg[\"payload\"]={\"signal\":data,\"time\": str(now.strftime(\"%Y.%m.%d.%H.%M.%S\"))}\nmsg[\"payload\"]=json.dumps(msg[\"payload\"])\n\nmsg[\"topic\"]=\"project/publish/pet/lillo/1/heart_rate\"\n\nreturn msg",
        "outputs": 1,
        "x": 730,
        "y": 520,
        "wires": [
            [
                "dc5680c4e1516c6b",
                "17b6bd7b29b4ac2d"
            ]
        ]
    },
    {
        "id": "dc5680c4e1516c6b",
        "type": "mqtt out",
        "z": "fcee8ceb0be2bc0c",
        "name": "",
        "topic": "",
        "qos": "",
        "retain": "",
        "respTopic": "",
        "contentType": "",
        "userProps": "",
        "correl": "",
        "expiry": "",
        "broker": "f4ae8a2004d0434a",
        "x": 910,
        "y": 520,
        "wires": []
    },
    {
        "id": "501fde3f0ca90a07",
        "type": "inject",
        "z": "fcee8ceb0be2bc0c",
        "d": true,
        "name": "",
        "props": [
            {
                "p": "payload"
            },
            {
                "p": "topic",
                "vt": "str"
            }
        ],
        "repeat": "6",
        "crontab": "",
        "once": false,
        "onceDelay": 0.1,
        "topic": "",
        "payload": "",
        "payloadType": "date",
        "x": 270,
        "y": 300,
        "wires": [
            [
                "9d84f40b384d2f13"
            ]
        ]
    },
    {
        "id": "9d84f40b384d2f13",
        "type": "python3-function",
        "z": "fcee8ceb0be2bc0c",
        "name": "temperature room",
        "func": "import random\nfrom datetime import datetime \nimport json\nrange_low = -55.0\nrange_high = 150 \nmeasure = float(random.randrange(range_low*2, range_high*2))/2\nmeasure=round(measure,1)\nnow = datetime.now()\nmsg[\"payload\"]={\"temperature\":measure,\n                \"time\": str(now.strftime(\"%Y.%m.%d.%H.%M.%S\"))}\nmsg[\"payload\"]=json.dumps(msg[\"payload\"])\nmsg[\"topic\"]=\"project/publish/pet/lillo/1/basal_temperature\"\n# msg[\"topic\"]=\"sacaza/ej\"\nreturn msg",
        "outputs": 1,
        "x": 450,
        "y": 300,
        "wires": [
            [
                "ab8b0b8f1fe261ec",
                "242e8af31d4cc280"
            ]
        ]
    },
    {
        "id": "ab8b0b8f1fe261ec",
        "type": "mqtt out",
        "z": "fcee8ceb0be2bc0c",
        "name": "",
        "topic": "",
        "qos": "",
        "retain": "",
        "respTopic": "",
        "contentType": "",
        "userProps": "",
        "correl": "",
        "expiry": "",
        "broker": "f4ae8a2004d0434a",
        "x": 690,
        "y": 300,
        "wires": []
    },
    {
        "id": "242e8af31d4cc280",
        "type": "debug",
        "z": "fcee8ceb0be2bc0c",
        "name": "",
        "active": false,
        "tosidebar": true,
        "console": false,
        "tostatus": false,
        "complete": "false",
        "statusVal": "",
        "statusType": "auto",
        "x": 750,
        "y": 360,
        "wires": []
    },
    {
        "id": "9e4e32baf7502873",
        "type": "change",
        "z": "fcee8ceb0be2bc0c",
        "name": "",
        "rules": [
            {
                "t": "set",
                "p": "local",
                "pt": "global",
                "to": "payload",
                "tot": "msg"
            }
        ],
        "action": "",
        "property": "",
        "from": "",
        "to": "",
        "reg": false,
        "x": 520,
        "y": 700,
        "wires": [
            []
        ]
    },
    {
        "id": "5d228ff1cd6600ab",
        "type": "function",
        "z": "fcee8ceb0be2bc0c",
        "name": "",
        "func": "location=global.get(\"local\")\nmsg.payload=location\nreturn msg;",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 380,
        "y": 100,
        "wires": [
            [
                "b062beb6511a3ef2"
            ]
        ]
    },
    {
        "id": "17b6bd7b29b4ac2d",
        "type": "debug",
        "z": "fcee8ceb0be2bc0c",
        "name": "",
        "active": true,
        "tosidebar": true,
        "console": false,
        "tostatus": false,
        "complete": "payload",
        "targetType": "msg",
        "statusVal": "",
        "statusType": "auto",
        "x": 890,
        "y": 600,
        "wires": []
    },
    {
        "id": "7e4271ddf2b6016d",
        "type": "ui_switch",
        "z": "fcee8ceb0be2bc0c",
        "name": "",
        "label": "Running away",
        "tooltip": "",
        "group": "621a1523e12cb8ed",
        "order": 6,
        "width": 0,
        "height": 0,
        "passthru": true,
        "decouple": "false",
        "topic": "topic",
        "topicType": "msg",
        "style": "",
        "onvalue": "true",
        "onvalueType": "bool",
        "onicon": "",
        "oncolor": "",
        "offvalue": "false",
        "offvalueType": "bool",
        "officon": "",
        "offcolor": "",
        "animate": false,
        "className": "",
        "x": 340,
        "y": 700,
        "wires": [
            [
                "9e4e32baf7502873"
            ]
        ]
    },
    {
        "id": "8c3a2c92c66b8234",
        "type": "ui_switch",
        "z": "fcee8ceb0be2bc0c",
        "name": "",
        "label": "high rate",
        "tooltip": "",
        "group": "9d526a34a2008886",
        "order": 0,
        "width": 0,
        "height": 0,
        "passthru": true,
        "decouple": "false",
        "topic": "topic",
        "topicType": "msg",
        "style": "",
        "onvalue": "true",
        "onvalueType": "bool",
        "onicon": "",
        "oncolor": "",
        "offvalue": "false",
        "offvalueType": "bool",
        "officon": "",
        "offcolor": "",
        "animate": false,
        "className": "",
        "x": 340,
        "y": 800,
        "wires": [
            [
                "ce548a0a2a66d319"
            ]
        ]
    },
    {
        "id": "ce548a0a2a66d319",
        "type": "change",
        "z": "fcee8ceb0be2bc0c",
        "name": "",
        "rules": [
            {
                "t": "set",
                "p": "rate",
                "pt": "global",
                "to": "payload",
                "tot": "msg"
            }
        ],
        "action": "",
        "property": "",
        "from": "",
        "to": "",
        "reg": false,
        "x": 500,
        "y": 800,
        "wires": [
            []
        ]
    },
    {
        "id": "e6057462abb99a6c",
        "type": "function",
        "z": "fcee8ceb0be2bc0c",
        "name": "",
        "func": "rate=global.get(\"rate\")\nmsg.rate=rate\nreturn msg;",
        "outputs": 1,
        "noerr": 0,
        "initialize": "// Code added here will be run once\n// whenever the node is started.\nglobal.set(\"rate\",false)",
        "finalize": "",
        "libs": [],
        "x": 540,
        "y": 520,
        "wires": [
            [
                "886786022501e0f1"
            ]
        ]
    },
    {
        "id": "b1b0f9b976ad0a72",
        "type": "inject",
        "z": "fcee8ceb0be2bc0c",
        "name": "",
        "props": [
            {
                "p": "payload"
            },
            {
                "p": "topic",
                "vt": "str"
            }
        ],
        "repeat": "3",
        "crontab": "",
        "once": true,
        "onceDelay": "0.5",
        "topic": "",
        "payload": "",
        "payloadType": "date",
        "x": 130,
        "y": 920,
        "wires": [
            [
                "6e491ae12d82d498"
            ]
        ]
    },
    {
        "id": "6cf7d075cfd3aa28",
        "type": "python3-function",
        "z": "fcee8ceb0be2bc0c",
        "name": "temperature room",
        "func": "import random\nfrom datetime import datetime \nimport json\n# range_low = -55.0\n# range_high = 150 \n# range_low=msg[\"payload\"][0]\n# range_high=msg[\"payload\"][1]\n# if \"bandTemp\" in msg.keys():\n#     if msg[\"bandTemp\"]==1:\n#         measure=range_high+10\n        \n#     elif msg[\"bandTemp\"]==0:\n#         measure=msg[\"limit\"]\n       \n# else:\n#     measure = float(random.randrange(range_low*2, range_high*2))/2\n#     measure=round(measure,1)\nmeasure=msg[\"payload\"]\nnow = datetime.now()\nmsg[\"payload\"]={\"temperature\":measure,\n                \"time\": str(now.strftime(\"%Y.%m.%d.%H.%M.%S\"))}\n# msg[\"payload\"]=json.dumps(msg[\"payload\"])\nmsg[\"topic\"]=\"project/publish/pet/Cucina/1/temperature\"\n# msg[\"topic\"]=\"sacaza/ej\"\n\nreturn msg",
        "outputs": 1,
        "x": 470,
        "y": 920,
        "wires": [
            [
                "478ecb01bd632584",
                "29e479d5c5d26d0c"
            ]
        ]
    },
    {
        "id": "478ecb01bd632584",
        "type": "mqtt out",
        "z": "fcee8ceb0be2bc0c",
        "name": "",
        "topic": "",
        "qos": "",
        "retain": "",
        "respTopic": "",
        "contentType": "",
        "userProps": "",
        "correl": "",
        "expiry": "",
        "broker": "f4ae8a2004d0434a",
        "x": 730,
        "y": 860,
        "wires": []
    },
    {
        "id": "29e479d5c5d26d0c",
        "type": "ui_text",
        "z": "fcee8ceb0be2bc0c",
        "group": "f83866e20b4eca41",
        "order": 4,
        "width": 0,
        "height": 0,
        "name": "",
        "label": "Temperature",
        "format": "{{msg.payload.temperature}}",
        "layout": "row-spread",
        "className": "",
        "x": 750,
        "y": 960,
        "wires": []
    },
    {
        "id": "6e491ae12d82d498",
        "type": "function",
        "z": "fcee8ceb0be2bc0c",
        "name": "temp",
        "func": "var max=global.get(\"rangeTempit\")[1]\nvar min=global.get(\"rangeTempit\")[0]\nvar bandTempit=global.get(\"bandTempit\")\n\n\nfunction getRndInt(min, max) {\n  return Math.floor(Math.random() * (max - min) ) + min;\n}\nif (bandTempit==false){\n    tempit=getRndInt(min,max)\n}\nelse  {\n    tempit=max+10\n    \n}\n\n\n\nmsg.payload=tempit\nglobal.set(\"bandTempit\",bandTempit)\n\nreturn msg;",
        "outputs": 1,
        "noerr": 0,
        "initialize": "// Code added here will be run once\n// whenever the node is started.\nglobal.set(\"bandTempit\",false)\n\n",
        "finalize": "",
        "libs": [],
        "x": 290,
        "y": 920,
        "wires": [
            [
                "6cf7d075cfd3aa28",
                "9c4176e930489f5d"
            ]
        ]
    },
    {
        "id": "791115441d5a7c2f",
        "type": "link in",
        "z": "fcee8ceb0be2bc0c",
        "name": "alertTempit",
        "links": [
            "4e29cec31a1f8fc8"
        ],
        "x": 135,
        "y": 980,
        "wires": [
            [
                "6e491ae12d82d498"
            ]
        ]
    },
    {
        "id": "9c4176e930489f5d",
        "type": "debug",
        "z": "fcee8ceb0be2bc0c",
        "name": "",
        "active": true,
        "tosidebar": true,
        "console": false,
        "tostatus": false,
        "complete": "false",
        "statusVal": "",
        "statusType": "auto",
        "x": 510,
        "y": 1020,
        "wires": []
    },
    {
        "id": "8f424a4c996f725d",
        "type": "ui_numeric",
        "z": "fcee8ceb0be2bc0c",
        "name": "",
        "label": "Lower normal temperature",
        "tooltip": "",
        "group": "f83866e20b4eca41",
        "order": 1,
        "width": 0,
        "height": 0,
        "wrap": false,
        "passthru": true,
        "topic": "topic",
        "topicType": "msg",
        "format": "{{value}}",
        "min": 0,
        "max": "100",
        "step": 1,
        "className": "",
        "x": 420,
        "y": 1180,
        "wires": [
            [
                "96399aa88b8b7f74"
            ]
        ]
    },
    {
        "id": "02950c389d1e6603",
        "type": "inject",
        "z": "fcee8ceb0be2bc0c",
        "name": "",
        "props": [
            {
                "p": "payload"
            }
        ],
        "repeat": "",
        "crontab": "",
        "once": true,
        "onceDelay": 0.1,
        "topic": "",
        "payload": "25",
        "payloadType": "num",
        "x": 210,
        "y": 1180,
        "wires": [
            [
                "8f424a4c996f725d"
            ]
        ]
    },
    {
        "id": "f50cfd6c244a8760",
        "type": "ui_numeric",
        "z": "fcee8ceb0be2bc0c",
        "name": "",
        "label": "Higher nomal temperature",
        "tooltip": "",
        "group": "f83866e20b4eca41",
        "order": 2,
        "width": 0,
        "height": 0,
        "wrap": false,
        "passthru": true,
        "topic": "topic",
        "topicType": "msg",
        "format": "{{value}}",
        "min": 0,
        "max": "100",
        "step": 1,
        "className": "",
        "x": 410,
        "y": 1240,
        "wires": [
            [
                "aa3249a8d0cecfcb"
            ]
        ]
    },
    {
        "id": "bb8fc776bcd1522a",
        "type": "inject",
        "z": "fcee8ceb0be2bc0c",
        "name": "",
        "props": [
            {
                "p": "payload"
            }
        ],
        "repeat": "",
        "crontab": "",
        "once": true,
        "onceDelay": 0.1,
        "topic": "",
        "payload": "28",
        "payloadType": "num",
        "x": 210,
        "y": 1240,
        "wires": [
            [
                "f50cfd6c244a8760"
            ]
        ]
    },
    {
        "id": "aa3249a8d0cecfcb",
        "type": "change",
        "z": "fcee8ceb0be2bc0c",
        "name": "",
        "rules": [
            {
                "t": "set",
                "p": "rangeTempit[1]",
                "pt": "global",
                "to": "payload",
                "tot": "msg"
            }
        ],
        "action": "",
        "property": "",
        "from": "",
        "to": "",
        "reg": false,
        "x": 690,
        "y": 1240,
        "wires": [
            []
        ]
    },
    {
        "id": "96399aa88b8b7f74",
        "type": "change",
        "z": "fcee8ceb0be2bc0c",
        "name": "",
        "rules": [
            {
                "t": "set",
                "p": "rangeTempit[0]",
                "pt": "global",
                "to": "payload",
                "tot": "msg"
            }
        ],
        "action": "",
        "property": "",
        "from": "",
        "to": "",
        "reg": false,
        "x": 690,
        "y": 1180,
        "wires": [
            []
        ]
    },
    {
        "id": "b2277e00ae1d7fdc",
        "type": "change",
        "z": "fcee8ceb0be2bc0c",
        "name": "",
        "rules": [
            {
                "t": "set",
                "p": "bandTempit",
                "pt": "global",
                "to": "payload",
                "tot": "msg"
            }
        ],
        "action": "",
        "property": "",
        "from": "",
        "to": "",
        "reg": false,
        "x": 640,
        "y": 1120,
        "wires": [
            [
                "4e29cec31a1f8fc8"
            ]
        ]
    },
    {
        "id": "4e29cec31a1f8fc8",
        "type": "link out",
        "z": "fcee8ceb0be2bc0c",
        "name": "alertTemp",
        "mode": "link",
        "links": [
            "791115441d5a7c2f"
        ],
        "x": 815,
        "y": 1120,
        "wires": []
    },
    {
        "id": "09542f89a142d231",
        "type": "ui_switch",
        "z": "fcee8ceb0be2bc0c",
        "name": "",
        "label": "High Temperature",
        "tooltip": "",
        "group": "f83866e20b4eca41",
        "order": 6,
        "width": 0,
        "height": 0,
        "passthru": true,
        "decouple": "false",
        "topic": "topic",
        "topicType": "msg",
        "style": "",
        "onvalue": "true",
        "onvalueType": "bool",
        "onicon": "",
        "oncolor": "",
        "offvalue": "false",
        "offvalueType": "bool",
        "officon": "",
        "offcolor": "",
        "animate": false,
        "className": "",
        "x": 430,
        "y": 1120,
        "wires": [
            [
                "b2277e00ae1d7fdc"
            ]
        ]
    },
    {
        "id": "f5c316c1c7483616",
        "type": "inject",
        "z": "cd3e5fa981fa1499",
        "name": "",
        "props": [
            {
                "p": "payload"
            },
            {
                "p": "topic",
                "vt": "str"
            }
        ],
        "repeat": "30",
        "crontab": "",
        "once": true,
        "onceDelay": "0.5",
        "topic": "",
        "payload": "",
        "payloadType": "date",
        "x": 190,
        "y": 360,
        "wires": [
            [
                "ee7dd4cf289a4211"
            ]
        ]
    },
    {
        "id": "d7eb4191fc1e9b39",
        "type": "python3-function",
        "z": "cd3e5fa981fa1499",
        "name": "temperature room",
        "func": "import random\nfrom datetime import datetime \nimport json\n# range_low = -55.0\n# range_high = 150 \n# range_low=msg[\"payload\"][0]\n# range_high=msg[\"payload\"][1]\n# if \"bandTemp\" in msg.keys():\n#     if msg[\"bandTemp\"]==1:\n#         measure=range_high+10\n        \n#     elif msg[\"bandTemp\"]==0:\n#         measure=msg[\"limit\"]\n       \n# else:\n#     measure = float(random.randrange(range_low*2, range_high*2))/2\n#     measure=round(measure,1)\nmeasure=msg[\"payload\"]\nnow = datetime.now()\nmsg[\"payload\"]={\"temperature\":measure,\n                \"time\": str(now.strftime(\"%Y.%m.%d.%H.%M.%S\"))}\n# msg[\"payload\"]=json.dumps(msg[\"payload\"])\nmsg[\"topic\"]=\"project/publish/room/Cucina/1/temperature\"\n# msg[\"topic\"]=\"sacaza/ej\"\n\nreturn msg",
        "outputs": 1,
        "x": 550,
        "y": 360,
        "wires": [
            [
                "d64d31d580685187",
                "9033fe75d89e4fb5",
                "8c27a171e2d28bfc"
            ]
        ]
    },
    {
        "id": "d64d31d580685187",
        "type": "mqtt out",
        "z": "cd3e5fa981fa1499",
        "name": "",
        "topic": "",
        "qos": "",
        "retain": "",
        "respTopic": "",
        "contentType": "",
        "userProps": "",
        "correl": "",
        "expiry": "",
        "broker": "f4ae8a2004d0434a",
        "x": 830,
        "y": 300,
        "wires": []
    },
    {
        "id": "993c86fc1f9a8cc3",
        "type": "python3-function",
        "z": "cd3e5fa981fa1499",
        "name": "mass food",
        "func": "import random\nfrom datetime import datetime \nimport json\nrange_low = 0\nrange_high = 6200 # grams\n# measure = round(random.uniform(range_low, range_high),2) \nmeasure=msg[\"food\"]\nnow = datetime.now()\nmsg[\"payload\"]={\"mass_food\":round(measure,2),\n                \"time\": str(now.strftime(\"%Y.%m.%d.%H.%M.%S\"))}\n# msg[\"payload\"]=json.dumps(msg[\"payload\"])\nmsg[\"topic\"]=\"project/publish/room/Cucina/1/mass_food\"\n# msg[\"topic\"]=\"sacaza/ej\"\nreturn msg",
        "outputs": 1,
        "x": 610,
        "y": 640,
        "wires": [
            [
                "fe0f266d767bcb81",
                "a4508450ddc8164b",
                "2586fa2c36a7763e",
                "f514298d3da79b63"
            ]
        ]
    },
    {
        "id": "a4508450ddc8164b",
        "type": "mqtt out",
        "z": "cd3e5fa981fa1499",
        "name": "",
        "topic": "",
        "qos": "",
        "retain": "",
        "respTopic": "",
        "contentType": "",
        "userProps": "",
        "correl": "",
        "expiry": "",
        "broker": "f4ae8a2004d0434a",
        "x": 830,
        "y": 540,
        "wires": []
    },
    {
        "id": "fe0f266d767bcb81",
        "type": "debug",
        "z": "cd3e5fa981fa1499",
        "name": "",
        "active": true,
        "tosidebar": true,
        "console": false,
        "tostatus": false,
        "complete": "payload",
        "targetType": "msg",
        "statusVal": "",
        "statusType": "auto",
        "x": 870,
        "y": 700,
        "wires": []
    },
    {
        "id": "435679c1d1c25b47",
        "type": "python3-function",
        "z": "cd3e5fa981fa1499",
        "name": "mass water",
        "func": "import random\nfrom datetime import datetime \nimport json\nrange_low = 0\nrange_high = 6200 # grams\nmeasure = msg[\"water\"]\nnow = datetime.now()\nmsg[\"payload\"]={\"mass_water\":round(measure,2),\n                \"time\": str(now.strftime(\"%Y.%m.%d.%H.%M.%S\"))}\n\nmsg[\"topic\"]=\"project/publish/room/Cucina/1/mass_water\"\n# msg[\"topic\"]=\"sacaza/ej\"\nreturn msg",
        "outputs": 1,
        "x": 610,
        "y": 800,
        "wires": [
            [
                "c17524b0c8312c42",
                "e8b821b3a44ab793",
                "061d268c8f88886f",
                "7a299e655bf88aa4"
            ]
        ]
    },
    {
        "id": "c17524b0c8312c42",
        "type": "mqtt out",
        "z": "cd3e5fa981fa1499",
        "name": "",
        "topic": "",
        "qos": "",
        "retain": "",
        "respTopic": "",
        "contentType": "",
        "userProps": "",
        "correl": "",
        "expiry": "",
        "broker": "f4ae8a2004d0434a",
        "x": 830,
        "y": 740,
        "wires": []
    },
    {
        "id": "e8b821b3a44ab793",
        "type": "debug",
        "z": "cd3e5fa981fa1499",
        "name": "",
        "active": true,
        "tosidebar": true,
        "console": false,
        "tostatus": false,
        "complete": "payload",
        "targetType": "msg",
        "statusVal": "",
        "statusType": "auto",
        "x": 870,
        "y": 860,
        "wires": []
    },
    {
        "id": "73bf08cf5876dab5",
        "type": "comment",
        "z": "cd3e5fa981fa1499",
        "name": "Comfort",
        "info": "",
        "x": 220,
        "y": 300,
        "wires": []
    },
    {
        "id": "0d001d650ff2e639",
        "type": "mqtt in",
        "z": "cd3e5fa981fa1499",
        "name": "",
        "topic": "project/alert/#",
        "qos": "2",
        "datatype": "json",
        "broker": "bd2715e9133e36a8",
        "nl": false,
        "rap": true,
        "rh": 0,
        "inputs": 0,
        "x": 250,
        "y": 1240,
        "wires": [
            [
                "8ce1e2bf05b16a44",
                "1e15db441c2ad49c"
            ]
        ]
    },
    {
        "id": "cc5c26276cda8fa0",
        "type": "http request",
        "z": "cd3e5fa981fa1499",
        "name": "",
        "method": "GET",
        "ret": "obj",
        "paytoqs": "query",
        "url": "",
        "tls": "",
        "persist": false,
        "proxy": "",
        "authType": "",
        "senderr": false,
        "x": 490,
        "y": 100,
        "wires": [
            [
                "a9269b83420548cb"
            ]
        ]
    },
    {
        "id": "2f9493b61a35bc1c",
        "type": "python3-function",
        "z": "cd3e5fa981fa1499",
        "name": "",
        "func": "import socket\nip=socket.gethostbyname(socket.gethostname())\nmsg[\"url\"]=\"http://172.21.216.32:8090\"+\"/searchDevicebyID\"\nmsg[\"payload\"]={\"ID\":4}\nreturn msg",
        "outputs": 1,
        "x": 300,
        "y": 100,
        "wires": [
            [
                "cc5c26276cda8fa0"
            ]
        ]
    },
    {
        "id": "30b6d6aac1d158cd",
        "type": "inject",
        "z": "cd3e5fa981fa1499",
        "name": "",
        "props": [
            {
                "p": "payload"
            },
            {
                "p": "topic",
                "vt": "str"
            }
        ],
        "repeat": "",
        "crontab": "",
        "once": false,
        "onceDelay": 0.1,
        "topic": "",
        "payload": "",
        "payloadType": "date",
        "x": 120,
        "y": 100,
        "wires": [
            [
                "2f9493b61a35bc1c"
            ]
        ]
    },
    {
        "id": "a9269b83420548cb",
        "type": "python3-function",
        "z": "cd3e5fa981fa1499",
        "name": "",
        "func": "\nservices=msg[\"payload\"][\"servicesDetails\"]\n\nfor serv in services:\n    if serv[\"serviceType\"]==\"MQTT\":\n        topics=serv[\"topic\"] \n# msg[\"payload\"]=[topic.split(\"/\") for topic in topics]\nmsg[\"payload\"]=topics\n\nreturn msg",
        "outputs": 1,
        "x": 670,
        "y": 100,
        "wires": [
            [
                "1c311c413c8bcf67",
                "267bf528bbc29205"
            ]
        ]
    },
    {
        "id": "1c311c413c8bcf67",
        "type": "change",
        "z": "cd3e5fa981fa1499",
        "name": "",
        "rules": [
            {
                "t": "set",
                "p": "topics",
                "pt": "flow",
                "to": "payload",
                "tot": "msg"
            }
        ],
        "action": "",
        "property": "",
        "from": "",
        "to": "",
        "reg": false,
        "x": 880,
        "y": 100,
        "wires": [
            []
        ]
    },
    {
        "id": "267bf528bbc29205",
        "type": "debug",
        "z": "cd3e5fa981fa1499",
        "name": "",
        "active": true,
        "tosidebar": true,
        "console": false,
        "tostatus": false,
        "complete": "false",
        "statusVal": "",
        "statusType": "auto",
        "x": 890,
        "y": 180,
        "wires": []
    },
    {
        "id": "7b12f0ee664566cd",
        "type": "ui_button",
        "z": "cd3e5fa981fa1499",
        "name": "",
        "group": "db6cfc5ecfae95b9",
        "order": 6,
        "width": 0,
        "height": 0,
        "passthru": false,
        "label": "High temperature alert",
        "tooltip": "",
        "color": "",
        "bgcolor": "",
        "className": "config, button",
        "icon": "",
        "payload": "",
        "payloadType": "str",
        "topic": "topic",
        "topicType": "msg",
        "x": 420,
        "y": 1520,
        "wires": [
            [
                "881bd8ae4bafd6f8"
            ]
        ]
    },
    {
        "id": "ba148f55f6fca7a5",
        "type": "mqtt out",
        "z": "cd3e5fa981fa1499",
        "name": "",
        "topic": "project/alert/3/kitchen/mass_food",
        "qos": "2",
        "retain": "",
        "respTopic": "",
        "contentType": "",
        "userProps": "",
        "correl": "",
        "expiry": "",
        "broker": "bd2715e9133e36a8",
        "x": 500,
        "y": 180,
        "wires": []
    },
    {
        "id": "0b1a807bccc57ff4",
        "type": "inject",
        "z": "cd3e5fa981fa1499",
        "name": "",
        "props": [
            {
                "p": "payload"
            }
        ],
        "repeat": "",
        "crontab": "",
        "once": false,
        "onceDelay": 0.1,
        "topic": "",
        "payload": "{\"measure\" : 10, \"actuator\" : true, \"value\" : 27}",
        "payloadType": "json",
        "x": 210,
        "y": 180,
        "wires": [
            [
                "ba148f55f6fca7a5"
            ]
        ]
    },
    {
        "id": "2c6c51e2e2fe6316",
        "type": "ui_numeric",
        "z": "cd3e5fa981fa1499",
        "name": "",
        "label": "Lower normal temperature",
        "tooltip": "",
        "group": "db6cfc5ecfae95b9",
        "order": 1,
        "width": 0,
        "height": 0,
        "wrap": false,
        "passthru": true,
        "topic": "topic",
        "topicType": "msg",
        "format": "{{value}}",
        "min": 0,
        "max": "100",
        "step": 1,
        "className": "",
        "x": 440,
        "y": 1580,
        "wires": [
            [
                "af7081c178a67f1a"
            ]
        ]
    },
    {
        "id": "3bc6fa6e8ff3ad5e",
        "type": "inject",
        "z": "cd3e5fa981fa1499",
        "name": "",
        "props": [
            {
                "p": "payload"
            }
        ],
        "repeat": "",
        "crontab": "",
        "once": true,
        "onceDelay": 0.1,
        "topic": "",
        "payload": "25",
        "payloadType": "num",
        "x": 230,
        "y": 1580,
        "wires": [
            [
                "2c6c51e2e2fe6316"
            ]
        ]
    },
    {
        "id": "1611a0f7058bf4d6",
        "type": "ui_numeric",
        "z": "cd3e5fa981fa1499",
        "name": "",
        "label": "Higher nomal temperature",
        "tooltip": "",
        "group": "db6cfc5ecfae95b9",
        "order": 2,
        "width": 0,
        "height": 0,
        "wrap": false,
        "passthru": true,
        "topic": "topic",
        "topicType": "msg",
        "format": "{{value}}",
        "min": 0,
        "max": "100",
        "step": 1,
        "className": "",
        "x": 430,
        "y": 1640,
        "wires": [
            [
                "4929285ff9ad21d9"
            ]
        ]
    },
    {
        "id": "66fa7d5aadb23663",
        "type": "inject",
        "z": "cd3e5fa981fa1499",
        "name": "",
        "props": [
            {
                "p": "payload"
            }
        ],
        "repeat": "",
        "crontab": "",
        "once": true,
        "onceDelay": 0.1,
        "topic": "",
        "payload": "28",
        "payloadType": "num",
        "x": 230,
        "y": 1640,
        "wires": [
            [
                "1611a0f7058bf4d6"
            ]
        ]
    },
    {
        "id": "4929285ff9ad21d9",
        "type": "change",
        "z": "cd3e5fa981fa1499",
        "name": "",
        "rules": [
            {
                "t": "set",
                "p": "rangeTemp[1]",
                "pt": "global",
                "to": "payload",
                "tot": "msg"
            }
        ],
        "action": "",
        "property": "",
        "from": "",
        "to": "",
        "reg": false,
        "x": 710,
        "y": 1640,
        "wires": [
            []
        ]
    },
    {
        "id": "af7081c178a67f1a",
        "type": "change",
        "z": "cd3e5fa981fa1499",
        "name": "",
        "rules": [
            {
                "t": "set",
                "p": "rangeTemp[0]",
                "pt": "global",
                "to": "payload",
                "tot": "msg"
            }
        ],
        "action": "",
        "property": "",
        "from": "",
        "to": "",
        "reg": false,
        "x": 710,
        "y": 1580,
        "wires": [
            []
        ]
    },
    {
        "id": "aa66ecc6c279bd29",
        "type": "debug",
        "z": "cd3e5fa981fa1499",
        "name": "",
        "active": true,
        "tosidebar": true,
        "console": false,
        "tostatus": false,
        "complete": "payload",
        "targetType": "msg",
        "statusVal": "",
        "statusType": "auto",
        "x": 690,
        "y": 1420,
        "wires": []
    },
    {
        "id": "bc377b92f3cd49f7",
        "type": "inject",
        "z": "cd3e5fa981fa1499",
        "name": "",
        "props": [
            {
                "p": "payload"
            },
            {
                "p": "topic",
                "vt": "str"
            }
        ],
        "repeat": "",
        "crontab": "",
        "once": false,
        "onceDelay": 0.1,
        "topic": "",
        "payload": "",
        "payloadType": "date",
        "x": 220,
        "y": 1440,
        "wires": [
            [
                "087e0ce1a3228c87"
            ]
        ]
    },
    {
        "id": "087e0ce1a3228c87",
        "type": "change",
        "z": "cd3e5fa981fa1499",
        "name": "",
        "rules": [
            {
                "t": "set",
                "p": "payload",
                "pt": "msg",
                "to": "rangeTemp",
                "tot": "global"
            }
        ],
        "action": "",
        "property": "",
        "from": "",
        "to": "",
        "reg": false,
        "x": 440,
        "y": 1420,
        "wires": [
            [
                "aa66ecc6c279bd29"
            ]
        ]
    },
    {
        "id": "881bd8ae4bafd6f8",
        "type": "change",
        "z": "cd3e5fa981fa1499",
        "name": "",
        "rules": [
            {
                "t": "set",
                "p": "bandTemp",
                "pt": "global",
                "to": "true",
                "tot": "bool"
            }
        ],
        "action": "",
        "property": "",
        "from": "",
        "to": "",
        "reg": false,
        "x": 660,
        "y": 1520,
        "wires": [
            [
                "4f6f9a6d5d5863b8"
            ]
        ]
    },
    {
        "id": "12ecef1de7ee231e",
        "type": "ui_template",
        "z": "cd3e5fa981fa1499",
        "group": "db6cfc5ecfae95b9",
        "name": "",
        "order": 3,
        "width": 0,
        "height": 0,
        "format": "\n\n<div>\n    Air conditioning \n    <span id=\"boto\" class={{msg.actuator}}>\n    </span>\n</div>\n\n\n\n",
        "storeOutMessages": true,
        "fwdInMessages": true,
        "resendOnRefresh": true,
        "templateScope": "local",
        "className": "",
        "x": 420,
        "y": 1780,
        "wires": [
            []
        ]
    },
    {
        "id": "b12cc0ea2f0525a0",
        "type": "ui_template",
        "z": "cd3e5fa981fa1499",
        "group": "db6cfc5ecfae95b9",
        "name": "",
        "order": 4,
        "width": 0,
        "height": 0,
        "format": "<style>\n#boto{\n  height: 25px;\n  width: 25px;\n  border-color:red;\n  \n  border-radius: 50%;\n  display: inline-block;\n  \n  margin-right:20px;\n  float:right;\n  \n}\n.true{\n    background-color:green;\n}\n.false{\n    background-color:red;   \n}\n\n\n\n</style>",
        "storeOutMessages": true,
        "fwdInMessages": false,
        "resendOnRefresh": true,
        "templateScope": "local",
        "className": "",
        "x": 420,
        "y": 1840,
        "wires": [
            []
        ]
    },
    {
        "id": "85a9056f287dc241",
        "type": "inject",
        "z": "cd3e5fa981fa1499",
        "name": "",
        "props": [
            {
                "p": "actuator",
                "v": "false",
                "vt": "str"
            },
            {
                "p": "topic",
                "vt": "str"
            }
        ],
        "repeat": "",
        "crontab": "",
        "once": true,
        "onceDelay": 0.1,
        "topic": "",
        "x": 210,
        "y": 1780,
        "wires": [
            [
                "12ecef1de7ee231e"
            ]
        ]
    },
    {
        "id": "f5e72fe9bf81b162",
        "type": "comment",
        "z": "cd3e5fa981fa1499",
        "name": "Searching topics",
        "info": "",
        "x": 260,
        "y": 40,
        "wires": []
    },
    {
        "id": "8ce1e2bf05b16a44",
        "type": "switch",
        "z": "cd3e5fa981fa1499",
        "name": "",
        "property": "topic",
        "propertyType": "msg",
        "rules": [
            {
                "t": "cont",
                "v": "temperature",
                "vt": "str"
            },
            {
                "t": "cont",
                "v": "mass_food",
                "vt": "str"
            },
            {
                "t": "cont",
                "v": "mass_water",
                "vt": "str"
            }
        ],
        "checkall": "true",
        "repair": false,
        "outputs": 3,
        "x": 470,
        "y": 1240,
        "wires": [
            [
                "802188dfdbe50f61"
            ],
            [
                "9b802c7b97497e3b"
            ],
            [
                "8dfca28883c27baf"
            ]
        ]
    },
    {
        "id": "20f51ebfac8ce5d2",
        "type": "link out",
        "z": "cd3e5fa981fa1499",
        "name": "alertTemp",
        "mode": "link",
        "links": [
            "7a828ecae30a8438",
            "4e1e1be67817473a"
        ],
        "x": 825,
        "y": 1160,
        "wires": []
    },
    {
        "id": "152b684d754e3d70",
        "type": "comment",
        "z": "cd3e5fa981fa1499",
        "name": "Recive alerts",
        "info": "",
        "x": 250,
        "y": 1160,
        "wires": []
    },
    {
        "id": "c1c2685c1d8fa814",
        "type": "comment",
        "z": "cd3e5fa981fa1499",
        "name": "user interface",
        "info": "",
        "x": 230,
        "y": 1360,
        "wires": []
    },
    {
        "id": "7a828ecae30a8438",
        "type": "link in",
        "z": "cd3e5fa981fa1499",
        "name": "alertTemp",
        "links": [
            "585b47fbb2715bd0",
            "20f51ebfac8ce5d2",
            "638caeb7cb591523"
        ],
        "x": 195,
        "y": 1720,
        "wires": [
            [
                "12ecef1de7ee231e"
            ]
        ]
    },
    {
        "id": "802188dfdbe50f61",
        "type": "change",
        "z": "cd3e5fa981fa1499",
        "name": "",
        "rules": [
            {
                "t": "set",
                "p": "limit",
                "pt": "msg",
                "to": "payload.value",
                "tot": "msg"
            },
            {
                "t": "set",
                "p": "actuatorTemp",
                "pt": "global",
                "to": "payload.actuator",
                "tot": "msg"
            },
            {
                "t": "set",
                "p": "actuator",
                "pt": "msg",
                "to": "payload.actuator",
                "tot": "msg"
            }
        ],
        "action": "",
        "property": "",
        "from": "",
        "to": "",
        "reg": false,
        "x": 700,
        "y": 1160,
        "wires": [
            [
                "20f51ebfac8ce5d2"
            ]
        ]
    },
    {
        "id": "585b47fbb2715bd0",
        "type": "link out",
        "z": "cd3e5fa981fa1499",
        "name": "alertTemp1",
        "mode": "link",
        "links": [
            "7a828ecae30a8438"
        ],
        "x": 1325,
        "y": 360,
        "wires": []
    },
    {
        "id": "b738538fbae776fa",
        "type": "ui_template",
        "z": "cd3e5fa981fa1499",
        "group": "b70e043ef0520b2b",
        "name": "",
        "order": 5,
        "width": 0,
        "height": 0,
        "format": "\n\n<div>\n    Food delivery \n    <span id=\"boto\" class={{msg.actuator}}>\n    </span>\n</div>\n\n\n\n",
        "storeOutMessages": true,
        "fwdInMessages": true,
        "resendOnRefresh": true,
        "templateScope": "local",
        "className": "",
        "x": 420,
        "y": 2180,
        "wires": [
            []
        ]
    },
    {
        "id": "b33be4d9c3700ce3",
        "type": "inject",
        "z": "cd3e5fa981fa1499",
        "name": "",
        "props": [
            {
                "p": "actuator",
                "v": "false",
                "vt": "str"
            },
            {
                "p": "topic",
                "vt": "str"
            }
        ],
        "repeat": "",
        "crontab": "",
        "once": true,
        "onceDelay": 0.1,
        "topic": "",
        "x": 210,
        "y": 2200,
        "wires": [
            [
                "b738538fbae776fa"
            ]
        ]
    },
    {
        "id": "5025ef6f3f5d117b",
        "type": "ui_numeric",
        "z": "cd3e5fa981fa1499",
        "name": "",
        "label": "Min weight food",
        "tooltip": "",
        "group": "b70e043ef0520b2b",
        "order": 1,
        "width": 0,
        "height": 0,
        "wrap": false,
        "passthru": true,
        "topic": "topic",
        "topicType": "msg",
        "format": "{{value}}",
        "min": 0,
        "max": "100",
        "step": 1,
        "className": "",
        "x": 380,
        "y": 1920,
        "wires": [
            [
                "b011aa13e12af647"
            ]
        ]
    },
    {
        "id": "07ce5ed3bfa05733",
        "type": "inject",
        "z": "cd3e5fa981fa1499",
        "name": "",
        "props": [
            {
                "p": "payload"
            }
        ],
        "repeat": "",
        "crontab": "",
        "once": true,
        "onceDelay": 0.1,
        "topic": "",
        "payload": "200",
        "payloadType": "num",
        "x": 210,
        "y": 1920,
        "wires": [
            [
                "5025ef6f3f5d117b"
            ]
        ]
    },
    {
        "id": "1ac5101590fae642",
        "type": "ui_numeric",
        "z": "cd3e5fa981fa1499",
        "name": "",
        "label": "Max weight food",
        "tooltip": "",
        "group": "b70e043ef0520b2b",
        "order": 2,
        "width": 0,
        "height": 0,
        "wrap": false,
        "passthru": true,
        "topic": "topic",
        "topicType": "msg",
        "format": "{{value}}",
        "min": 0,
        "max": "100",
        "step": 1,
        "className": "",
        "x": 380,
        "y": 1980,
        "wires": [
            [
                "2e2d798618df98fd"
            ]
        ]
    },
    {
        "id": "69f5a2fdd69ac8d9",
        "type": "inject",
        "z": "cd3e5fa981fa1499",
        "name": "",
        "props": [
            {
                "p": "payload"
            }
        ],
        "repeat": "",
        "crontab": "",
        "once": true,
        "onceDelay": 0.1,
        "topic": "",
        "payload": "400",
        "payloadType": "num",
        "x": 210,
        "y": 1980,
        "wires": [
            [
                "1ac5101590fae642"
            ]
        ]
    },
    {
        "id": "2e2d798618df98fd",
        "type": "change",
        "z": "cd3e5fa981fa1499",
        "name": "",
        "rules": [
            {
                "t": "set",
                "p": "rangeFood[1]",
                "pt": "global",
                "to": "payload",
                "tot": "msg"
            },
            {
                "t": "set",
                "p": "food",
                "pt": "global",
                "to": "payload",
                "tot": "msg"
            }
        ],
        "action": "",
        "property": "",
        "from": "",
        "to": "",
        "reg": false,
        "x": 660,
        "y": 1980,
        "wires": [
            []
        ]
    },
    {
        "id": "b011aa13e12af647",
        "type": "change",
        "z": "cd3e5fa981fa1499",
        "name": "",
        "rules": [
            {
                "t": "set",
                "p": "rangeFood[0]",
                "pt": "global",
                "to": "payload",
                "tot": "msg"
            }
        ],
        "action": "",
        "property": "",
        "from": "",
        "to": "",
        "reg": false,
        "x": 690,
        "y": 1920,
        "wires": [
            []
        ]
    },
    {
        "id": "364f5a2b8a8bbb39",
        "type": "ui_numeric",
        "z": "cd3e5fa981fa1499",
        "name": "",
        "label": "Steps",
        "tooltip": "",
        "group": "b70e043ef0520b2b",
        "order": 3,
        "width": 0,
        "height": 0,
        "wrap": false,
        "passthru": true,
        "topic": "topic",
        "topicType": "msg",
        "format": "{{value}}",
        "min": 0,
        "max": "100",
        "step": 1,
        "className": "",
        "x": 350,
        "y": 2040,
        "wires": [
            [
                "5e6d59cac96bbb6e"
            ]
        ]
    },
    {
        "id": "744781eaaaf9b6cc",
        "type": "inject",
        "z": "cd3e5fa981fa1499",
        "name": "",
        "props": [
            {
                "p": "payload"
            }
        ],
        "repeat": "",
        "crontab": "",
        "once": true,
        "onceDelay": 0.1,
        "topic": "",
        "payload": "6",
        "payloadType": "num",
        "x": 210,
        "y": 2040,
        "wires": [
            [
                "364f5a2b8a8bbb39"
            ]
        ]
    },
    {
        "id": "5e6d59cac96bbb6e",
        "type": "change",
        "z": "cd3e5fa981fa1499",
        "name": "",
        "rules": [
            {
                "t": "set",
                "p": "delayFood",
                "pt": "global",
                "to": "payload",
                "tot": "msg"
            }
        ],
        "action": "",
        "property": "",
        "from": "",
        "to": "",
        "reg": false,
        "x": 680,
        "y": 2040,
        "wires": [
            []
        ]
    },
    {
        "id": "8022b028afd62fa6",
        "type": "function",
        "z": "cd3e5fa981fa1499",
        "name": "Mass_food",
        "func": "food=global.get(\"food\")\nMaxfood=global.get(\"rangeFood\")[1]\nMinfood=global.get(\"rangeFood\")[0]\ncountFood=global.get(\"countFood\")\ndelay=global.get(\"delayFood\")\nactuator=global.get(\"actuatorFood\")\nalertFood=global.get(\"alertFood\")\ncountAlertF=global.get(\"countAlertF\")\n\n\nfunction sleep(milliseconds) {\n  const date = Date.now();\n  let currentDate = null;\n  do {\n    currentDate = Date.now();\n  } while (currentDate - date < milliseconds);\n}\n\nsus=(Maxfood-Minfood)/delay\n\nif (actuator==\"true\" && food<Minfood){\n    countFood=0\n    food=msg.limit\n    alertFood=false\n    countAlertF=0;\n    \n}\n\nif (countFood==0){\n    food=food\n    countFood=countFood+1\n    \n}\n\nelse{\n    \n    food=food-sus\n    if (food<0){\n        food=0\n    }\n    \n}\n\nif (alertFood==true){\n    countAlertF+=1\n    if (countAlertF>0){\n        sleep(1000)\n    }\n}\n\n\n\n\nmsg.food=food\nglobal.set(\"food\",food)\nglobal.set(\"countFood\",countFood)\nglobal.set(\"alertFood\",alertFood)\nglobal.set(\"countAlertF\",countAlertF)\n\n\nreturn msg;",
        "outputs": 1,
        "noerr": 0,
        "initialize": "// Code added here will be run once\n// whenever the node is started.\nglobal.set(\"countFood\",0);\nglobal.set(\"actuatorFood\",\"false\")\nmax=global.get(\"rangeFood\")[1]\nglobal.set(\"food\",max)\nglobal.set(\"alertFood\",false)\nglobal.set(\"countAlertF\",0)",
        "finalize": "",
        "libs": [],
        "x": 390,
        "y": 640,
        "wires": [
            [
                "993c86fc1f9a8cc3"
            ]
        ]
    },
    {
        "id": "6316b2e04e56e633",
        "type": "inject",
        "z": "cd3e5fa981fa1499",
        "name": "",
        "props": [
            {
                "p": "payload"
            },
            {
                "p": "topic",
                "vt": "str"
            }
        ],
        "repeat": "17",
        "crontab": "",
        "once": true,
        "onceDelay": 0.1,
        "topic": "",
        "payload": "",
        "payloadType": "date",
        "x": 170,
        "y": 640,
        "wires": [
            [
                "8022b028afd62fa6"
            ]
        ]
    },
    {
        "id": "07c5a77223a3e264",
        "type": "link out",
        "z": "cd3e5fa981fa1499",
        "name": "alertFood",
        "mode": "link",
        "links": [
            "2d230d1ba809ba16",
            "4983729ca18b88e2"
        ],
        "x": 845,
        "y": 1240,
        "wires": []
    },
    {
        "id": "2d230d1ba809ba16",
        "type": "link in",
        "z": "cd3e5fa981fa1499",
        "name": "alertFood",
        "links": [
            "d738eee9c0baf5d4",
            "07c5a77223a3e264",
            "b5ed44cedbe5c855"
        ],
        "x": 215,
        "y": 2140,
        "wires": [
            [
                "b738538fbae776fa"
            ]
        ]
    },
    {
        "id": "1e15db441c2ad49c",
        "type": "debug",
        "z": "cd3e5fa981fa1499",
        "name": "",
        "active": true,
        "tosidebar": true,
        "console": false,
        "tostatus": false,
        "complete": "payload",
        "targetType": "msg",
        "statusVal": "",
        "statusType": "auto",
        "x": 910,
        "y": 1380,
        "wires": []
    },
    {
        "id": "9b802c7b97497e3b",
        "type": "change",
        "z": "cd3e5fa981fa1499",
        "name": "",
        "rules": [
            {
                "t": "set",
                "p": "limit",
                "pt": "msg",
                "to": "payload.value",
                "tot": "msg"
            },
            {
                "t": "set",
                "p": "actuatorFood",
                "pt": "global",
                "to": "payload.actuator",
                "tot": "msg"
            },
            {
                "t": "set",
                "p": "actuator",
                "pt": "msg",
                "to": "payload.actuator",
                "tot": "msg"
            },
            {
                "t": "set",
                "p": "alertFood",
                "pt": "global",
                "to": "true",
                "tot": "bool"
            }
        ],
        "action": "",
        "property": "",
        "from": "",
        "to": "",
        "reg": false,
        "x": 720,
        "y": 1240,
        "wires": [
            [
                "07c5a77223a3e264"
            ]
        ]
    },
    {
        "id": "d738eee9c0baf5d4",
        "type": "link out",
        "z": "cd3e5fa981fa1499",
        "name": "alertFood1",
        "mode": "link",
        "links": [
            "2d230d1ba809ba16"
        ],
        "x": 1285,
        "y": 640,
        "wires": []
    },
    {
        "id": "2586fa2c36a7763e",
        "type": "ui_text",
        "z": "cd3e5fa981fa1499",
        "group": "b70e043ef0520b2b",
        "order": 4,
        "width": 0,
        "height": 0,
        "name": "",
        "label": "Mass food",
        "format": "{{msg.payload.mass_food}}",
        "layout": "row-spread",
        "className": "",
        "x": 890,
        "y": 600,
        "wires": []
    },
    {
        "id": "4983729ca18b88e2",
        "type": "link in",
        "z": "cd3e5fa981fa1499",
        "name": "alertFood",
        "links": [
            "07c5a77223a3e264"
        ],
        "x": 205,
        "y": 680,
        "wires": [
            [
                "8022b028afd62fa6"
            ]
        ]
    },
    {
        "id": "219f5ca010f4ea8f",
        "type": "change",
        "z": "cd3e5fa981fa1499",
        "name": "",
        "rules": [
            {
                "t": "set",
                "p": "actuatorFood",
                "pt": "global",
                "to": "false",
                "tot": "str"
            },
            {
                "t": "set",
                "p": "actuator",
                "pt": "msg",
                "to": "actuatorFood",
                "tot": "global"
            }
        ],
        "action": "",
        "property": "",
        "from": "",
        "to": "",
        "reg": false,
        "x": 1120,
        "y": 640,
        "wires": [
            [
                "d738eee9c0baf5d4"
            ]
        ]
    },
    {
        "id": "f514298d3da79b63",
        "type": "switch",
        "z": "cd3e5fa981fa1499",
        "name": "",
        "property": "actuatorFood",
        "propertyType": "global",
        "rules": [
            {
                "t": "eq",
                "v": "true",
                "vt": "str"
            }
        ],
        "checkall": "true",
        "repair": false,
        "outputs": 1,
        "x": 810,
        "y": 640,
        "wires": [
            [
                "788bce21b9285eed"
            ]
        ]
    },
    {
        "id": "788bce21b9285eed",
        "type": "delay",
        "z": "cd3e5fa981fa1499",
        "name": "",
        "pauseType": "delay",
        "timeout": "3",
        "timeoutUnits": "seconds",
        "rate": "1",
        "nbRateUnits": "1",
        "rateUnits": "second",
        "randomFirst": "1",
        "randomLast": "5",
        "randomUnits": "seconds",
        "drop": false,
        "allowrate": false,
        "outputs": 1,
        "x": 960,
        "y": 640,
        "wires": [
            [
                "219f5ca010f4ea8f"
            ]
        ]
    },
    {
        "id": "9033fe75d89e4fb5",
        "type": "ui_text",
        "z": "cd3e5fa981fa1499",
        "group": "db6cfc5ecfae95b9",
        "order": 4,
        "width": 0,
        "height": 0,
        "name": "",
        "label": "Temperature",
        "format": "{{msg.payload.temperature}}",
        "layout": "row-spread",
        "className": "",
        "x": 850,
        "y": 400,
        "wires": []
    },
    {
        "id": "63c533b65be2ff5e",
        "type": "ui_template",
        "z": "cd3e5fa981fa1499",
        "group": "d249e447cf927179",
        "name": "",
        "order": 5,
        "width": 0,
        "height": 0,
        "format": "\n\n<div>\n    Food delivery \n    <span id=\"boto\" class={{msg.actuator}}>\n    </span>\n</div>\n\n\n\n",
        "storeOutMessages": true,
        "fwdInMessages": true,
        "resendOnRefresh": true,
        "templateScope": "local",
        "className": "",
        "x": 420,
        "y": 2580,
        "wires": [
            []
        ]
    },
    {
        "id": "186b25ea6ac5a9d0",
        "type": "inject",
        "z": "cd3e5fa981fa1499",
        "name": "",
        "props": [
            {
                "p": "actuator",
                "v": "false",
                "vt": "str"
            },
            {
                "p": "topic",
                "vt": "str"
            }
        ],
        "repeat": "",
        "crontab": "",
        "once": true,
        "onceDelay": 0.1,
        "topic": "",
        "x": 200,
        "y": 2600,
        "wires": [
            [
                "63c533b65be2ff5e"
            ]
        ]
    },
    {
        "id": "3f0934fcb4e773b8",
        "type": "ui_numeric",
        "z": "cd3e5fa981fa1499",
        "name": "",
        "label": "Min weight water",
        "tooltip": "",
        "group": "d249e447cf927179",
        "order": 1,
        "width": 0,
        "height": 0,
        "wrap": false,
        "passthru": true,
        "topic": "topic",
        "topicType": "msg",
        "format": "{{value}}",
        "min": 0,
        "max": "100",
        "step": 1,
        "className": "",
        "x": 410,
        "y": 2320,
        "wires": [
            [
                "9608d6104eeb014f"
            ]
        ]
    },
    {
        "id": "7f899657bb23f8f7",
        "type": "inject",
        "z": "cd3e5fa981fa1499",
        "name": "",
        "props": [
            {
                "p": "payload"
            }
        ],
        "repeat": "",
        "crontab": "",
        "once": true,
        "onceDelay": 0.1,
        "topic": "",
        "payload": "100",
        "payloadType": "num",
        "x": 200,
        "y": 2320,
        "wires": [
            [
                "3f0934fcb4e773b8"
            ]
        ]
    },
    {
        "id": "9f975e205152fdd0",
        "type": "ui_numeric",
        "z": "cd3e5fa981fa1499",
        "name": "",
        "label": "Max weight water",
        "tooltip": "",
        "group": "d249e447cf927179",
        "order": 2,
        "width": 0,
        "height": 0,
        "wrap": false,
        "passthru": true,
        "topic": "topic",
        "topicType": "msg",
        "format": "{{value}}",
        "min": 0,
        "max": "100",
        "step": 1,
        "className": "",
        "x": 410,
        "y": 2380,
        "wires": [
            [
                "2b2c3a1eb2bca877"
            ]
        ]
    },
    {
        "id": "b0fedda28f170bac",
        "type": "inject",
        "z": "cd3e5fa981fa1499",
        "name": "",
        "props": [
            {
                "p": "payload"
            }
        ],
        "repeat": "",
        "crontab": "",
        "once": true,
        "onceDelay": 0.1,
        "topic": "",
        "payload": "400",
        "payloadType": "num",
        "x": 200,
        "y": 2380,
        "wires": [
            [
                "9f975e205152fdd0"
            ]
        ]
    },
    {
        "id": "2b2c3a1eb2bca877",
        "type": "change",
        "z": "cd3e5fa981fa1499",
        "name": "",
        "rules": [
            {
                "t": "set",
                "p": "rangeWater[1]",
                "pt": "global",
                "to": "payload",
                "tot": "msg"
            },
            {
                "t": "set",
                "p": "water",
                "pt": "global",
                "to": "payload",
                "tot": "msg"
            }
        ],
        "action": "",
        "property": "",
        "from": "",
        "to": "",
        "reg": false,
        "x": 680,
        "y": 2380,
        "wires": [
            []
        ]
    },
    {
        "id": "9608d6104eeb014f",
        "type": "change",
        "z": "cd3e5fa981fa1499",
        "name": "",
        "rules": [
            {
                "t": "set",
                "p": "rangeWater[0]",
                "pt": "global",
                "to": "payload",
                "tot": "msg"
            }
        ],
        "action": "",
        "property": "",
        "from": "",
        "to": "",
        "reg": false,
        "x": 710,
        "y": 2320,
        "wires": [
            []
        ]
    },
    {
        "id": "a4dec1025b19e4f9",
        "type": "ui_numeric",
        "z": "cd3e5fa981fa1499",
        "name": "",
        "label": "Steps",
        "tooltip": "",
        "group": "d249e447cf927179",
        "order": 3,
        "width": 0,
        "height": 0,
        "wrap": false,
        "passthru": true,
        "topic": "topic",
        "topicType": "msg",
        "format": "{{value}}",
        "min": 0,
        "max": "100",
        "step": 1,
        "className": "",
        "x": 340,
        "y": 2440,
        "wires": [
            [
                "a6e1e47e9e2b18c9"
            ]
        ]
    },
    {
        "id": "0602cc986812e518",
        "type": "inject",
        "z": "cd3e5fa981fa1499",
        "name": "",
        "props": [
            {
                "p": "payload"
            }
        ],
        "repeat": "",
        "crontab": "",
        "once": true,
        "onceDelay": 0.1,
        "topic": "",
        "payload": "4",
        "payloadType": "num",
        "x": 200,
        "y": 2440,
        "wires": [
            [
                "a4dec1025b19e4f9"
            ]
        ]
    },
    {
        "id": "a6e1e47e9e2b18c9",
        "type": "change",
        "z": "cd3e5fa981fa1499",
        "name": "",
        "rules": [
            {
                "t": "set",
                "p": "delayWater",
                "pt": "global",
                "to": "payload",
                "tot": "msg"
            }
        ],
        "action": "",
        "property": "",
        "from": "",
        "to": "",
        "reg": false,
        "x": 720,
        "y": 2440,
        "wires": [
            []
        ]
    },
    {
        "id": "4c17913d2dd83d67",
        "type": "link in",
        "z": "cd3e5fa981fa1499",
        "name": "alertWater",
        "links": [
            "7a3d1cf1fa9afd79",
            "f4e7c33351f7a580"
        ],
        "x": 185,
        "y": 2540,
        "wires": [
            [
                "63c533b65be2ff5e"
            ]
        ]
    },
    {
        "id": "15cf5b8563618bdd",
        "type": "function",
        "z": "cd3e5fa981fa1499",
        "name": "Mass_water",
        "func": "water=global.get(\"water\")\nMaxwater=global.get(\"rangeWater\")[1]\nMinwater=global.get(\"rangeWater\")[0]\ncountwater=global.get(\"countwater\")\ndelay=global.get(\"delayWater\")\nactuator=global.get(\"actuatorWater\")\nalertWater=global.get(\"alertWater\")\ncountAlertW=global.get(\"countAlertW\")\n\nfunction sleep(milliseconds) {\n  const date = Date.now();\n  let currentDate = null;\n  do {\n    currentDate = Date.now();\n  } while (currentDate - date < milliseconds);\n}\n\nsus=(Maxwater-Minwater)/delay\n\nif (actuator==\"true\" && water<Minwater){\n    countwater=0\n    water=msg.limit\n    alertWater=false\n    countAlertW=0;\n    \n    \n    \n}\n\nif (countwater==0){\n    water=water\n    countwater=countwater+1\n    \n}\n\nelse{\n    \n    water=water-sus\n    if (water<0){\n        water=0\n    }\n    \n}\nif (alertWater==true){\n    countAlertW+=1\n    if (countAlertW>0){\n        sleep(1000)\n    }\n}\n\n\n\n\n\nmsg.water=water\nglobal.set(\"water\",water)\nglobal.set(\"countwater\",countwater)\nglobal.set(\"alertWater\",alertWater)\nglobal.set(\"countAlertW\",countAlertW)\n\n\nreturn msg;",
        "outputs": 1,
        "noerr": 0,
        "initialize": "// Code added here will be run once\n// whenever the node is started.\nglobal.set(\"countwater\",0);\nglobal.set(\"actuatorWater\",\"false\")\nmax=global.get(\"rangeWater\")[1]\nglobal.set(\"water\",max)\nglobal.set(\"alertWater\",false)\nglobal.set(\"countAlertW\",0)",
        "finalize": "",
        "libs": [],
        "x": 410,
        "y": 800,
        "wires": [
            [
                "435679c1d1c25b47"
            ]
        ]
    },
    {
        "id": "061d268c8f88886f",
        "type": "switch",
        "z": "cd3e5fa981fa1499",
        "name": "",
        "property": "actuatorWater",
        "propertyType": "global",
        "rules": [
            {
                "t": "eq",
                "v": "true",
                "vt": "str"
            }
        ],
        "checkall": "true",
        "repair": false,
        "outputs": 1,
        "x": 830,
        "y": 800,
        "wires": [
            [
                "fbcca47d705790c2"
            ]
        ]
    },
    {
        "id": "7a299e655bf88aa4",
        "type": "ui_text",
        "z": "cd3e5fa981fa1499",
        "group": "d249e447cf927179",
        "order": 4,
        "width": 0,
        "height": 0,
        "name": "",
        "label": "Mass water",
        "format": "{{msg.payload.mass_water}}",
        "layout": "row-spread",
        "className": "",
        "x": 850,
        "y": 920,
        "wires": []
    },
    {
        "id": "fbcca47d705790c2",
        "type": "delay",
        "z": "cd3e5fa981fa1499",
        "name": "",
        "pauseType": "delay",
        "timeout": "3",
        "timeoutUnits": "seconds",
        "rate": "1",
        "nbRateUnits": "1",
        "rateUnits": "second",
        "randomFirst": "1",
        "randomLast": "5",
        "randomUnits": "seconds",
        "drop": false,
        "allowrate": false,
        "outputs": 1,
        "x": 1040,
        "y": 800,
        "wires": [
            [
                "15ee388f5823c5f2"
            ]
        ]
    },
    {
        "id": "15ee388f5823c5f2",
        "type": "change",
        "z": "cd3e5fa981fa1499",
        "name": "",
        "rules": [
            {
                "t": "set",
                "p": "actuatorWater",
                "pt": "global",
                "to": "false",
                "tot": "str"
            },
            {
                "t": "set",
                "p": "actuator",
                "pt": "msg",
                "to": "actuatorWater",
                "tot": "global"
            }
        ],
        "action": "",
        "property": "",
        "from": "",
        "to": "",
        "reg": false,
        "x": 1200,
        "y": 800,
        "wires": [
            [
                "7a3d1cf1fa9afd79"
            ]
        ]
    },
    {
        "id": "7a3d1cf1fa9afd79",
        "type": "link out",
        "z": "cd3e5fa981fa1499",
        "name": "alertwater",
        "mode": "link",
        "links": [
            "4c17913d2dd83d67"
        ],
        "x": 1355,
        "y": 800,
        "wires": []
    },
    {
        "id": "8dfca28883c27baf",
        "type": "change",
        "z": "cd3e5fa981fa1499",
        "name": "",
        "rules": [
            {
                "t": "set",
                "p": "limit",
                "pt": "msg",
                "to": "payload.value",
                "tot": "msg"
            },
            {
                "t": "set",
                "p": "actuatorWater",
                "pt": "global",
                "to": "payload.actuator",
                "tot": "msg"
            },
            {
                "t": "set",
                "p": "actuator",
                "pt": "msg",
                "to": "payload.actuator",
                "tot": "msg"
            },
            {
                "t": "set",
                "p": "alertWater",
                "pt": "global",
                "to": "true",
                "tot": "bool"
            }
        ],
        "action": "",
        "property": "",
        "from": "",
        "to": "",
        "reg": false,
        "x": 720,
        "y": 1300,
        "wires": [
            [
                "f4e7c33351f7a580"
            ]
        ]
    },
    {
        "id": "f4e7c33351f7a580",
        "type": "link out",
        "z": "cd3e5fa981fa1499",
        "name": "alertWater",
        "mode": "link",
        "links": [
            "4c17913d2dd83d67",
            "acc260107916bf81"
        ],
        "x": 845,
        "y": 1300,
        "wires": []
    },
    {
        "id": "acc260107916bf81",
        "type": "link in",
        "z": "cd3e5fa981fa1499",
        "name": "alertWater1",
        "links": [
            "f4e7c33351f7a580"
        ],
        "x": 215,
        "y": 840,
        "wires": [
            [
                "15cf5b8563618bdd"
            ]
        ]
    },
    {
        "id": "36332c76b53e158a",
        "type": "inject",
        "z": "cd3e5fa981fa1499",
        "name": "",
        "props": [
            {
                "p": "payload"
            }
        ],
        "repeat": "5",
        "crontab": "",
        "once": true,
        "onceDelay": 0.1,
        "topic": "",
        "payload": "",
        "payloadType": "date",
        "x": 170,
        "y": 800,
        "wires": [
            [
                "15cf5b8563618bdd"
            ]
        ]
    },
    {
        "id": "b03e36ecf79f4f10",
        "type": "debug",
        "z": "cd3e5fa981fa1499",
        "name": "",
        "active": false,
        "tosidebar": true,
        "console": false,
        "tostatus": false,
        "complete": "false",
        "statusVal": "",
        "statusType": "auto",
        "x": 810,
        "y": 2240,
        "wires": []
    },
    {
        "id": "ccdd1813f72657e9",
        "type": "change",
        "z": "cd3e5fa981fa1499",
        "name": "",
        "rules": [
            {
                "t": "set",
                "p": "payload",
                "pt": "msg",
                "to": "water",
                "tot": "global"
            }
        ],
        "action": "",
        "property": "",
        "from": "",
        "to": "",
        "reg": false,
        "x": 620,
        "y": 2240,
        "wires": [
            [
                "b03e36ecf79f4f10"
            ]
        ]
    },
    {
        "id": "1658eb45ebd55a70",
        "type": "inject",
        "z": "cd3e5fa981fa1499",
        "name": "",
        "props": [
            {
                "p": "payload"
            },
            {
                "p": "topic",
                "vt": "str"
            }
        ],
        "repeat": "",
        "crontab": "",
        "once": false,
        "onceDelay": 0.1,
        "topic": "",
        "payload": "",
        "payloadType": "date",
        "x": 400,
        "y": 2240,
        "wires": [
            [
                "ccdd1813f72657e9"
            ]
        ]
    },
    {
        "id": "ee7dd4cf289a4211",
        "type": "function",
        "z": "cd3e5fa981fa1499",
        "name": "temp",
        "func": "var max=global.get(\"rangeTemp\")[1]\nvar min=global.get(\"rangeTemp\")[0]\nvar bandTemp=global.get(\"bandTemp\")\nvar actuator=global.get(\"actuatorTemp\")\n\nfunction getRndInt(min, max) {\n  return Math.floor(Math.random() * (max - min) ) + min;\n}\nif (actuator==\"false\"){\n    temp=getRndInt(min,max)\n}\nelse if (actuator==\"true\"){\n    temp=msg.limit\n    bandTemp=false\n}\n\nif (bandTemp==true){\n    temp=max+10\n    \n}\n\n\n\n\nmsg.payload=temp\nglobal.set(\"bandTemp\",bandTemp)\n\nreturn msg;",
        "outputs": 1,
        "noerr": 0,
        "initialize": "// Code added here will be run once\n// whenever the node is started.\nglobal.set(\"bandTemp\",false)\nglobal.set(\"actuatorTemp\",\"false\")\n",
        "finalize": "",
        "libs": [],
        "x": 370,
        "y": 360,
        "wires": [
            [
                "d7eb4191fc1e9b39",
                "8853c2b66af36fc6"
            ]
        ]
    },
    {
        "id": "4e1e1be67817473a",
        "type": "link in",
        "z": "cd3e5fa981fa1499",
        "name": "alertTemp",
        "links": [
            "a3cc6ed86487c8d7",
            "20f51ebfac8ce5d2",
            "4f6f9a6d5d5863b8"
        ],
        "x": 235,
        "y": 420,
        "wires": [
            [
                "ee7dd4cf289a4211"
            ]
        ]
    },
    {
        "id": "8853c2b66af36fc6",
        "type": "debug",
        "z": "cd3e5fa981fa1499",
        "name": "",
        "active": false,
        "tosidebar": true,
        "console": false,
        "tostatus": false,
        "complete": "false",
        "statusVal": "",
        "statusType": "auto",
        "x": 650,
        "y": 460,
        "wires": []
    },
    {
        "id": "7def344bba32ec26",
        "type": "delay",
        "z": "cd3e5fa981fa1499",
        "name": "",
        "pauseType": "delay",
        "timeout": "3",
        "timeoutUnits": "seconds",
        "rate": "1",
        "nbRateUnits": "1",
        "rateUnits": "second",
        "randomFirst": "1",
        "randomLast": "5",
        "randomUnits": "seconds",
        "drop": false,
        "allowrate": false,
        "outputs": 1,
        "x": 1000,
        "y": 360,
        "wires": [
            [
                "b87fef6b8349419e"
            ]
        ]
    },
    {
        "id": "8c27a171e2d28bfc",
        "type": "switch",
        "z": "cd3e5fa981fa1499",
        "name": "",
        "property": "actuatorTemp",
        "propertyType": "global",
        "rules": [
            {
                "t": "eq",
                "v": "true",
                "vt": "str"
            }
        ],
        "checkall": "true",
        "repair": false,
        "outputs": 1,
        "x": 830,
        "y": 360,
        "wires": [
            [
                "7def344bba32ec26"
            ]
        ]
    },
    {
        "id": "b87fef6b8349419e",
        "type": "change",
        "z": "cd3e5fa981fa1499",
        "name": "",
        "rules": [
            {
                "t": "set",
                "p": "actuatorTemp",
                "pt": "global",
                "to": "false",
                "tot": "str"
            },
            {
                "t": "set",
                "p": "actuator",
                "pt": "msg",
                "to": "actuatorTemp",
                "tot": "global"
            }
        ],
        "action": "",
        "property": "",
        "from": "",
        "to": "",
        "reg": false,
        "x": 1180,
        "y": 360,
        "wires": [
            [
                "585b47fbb2715bd0"
            ]
        ]
    },
    {
        "id": "4f6f9a6d5d5863b8",
        "type": "link out",
        "z": "cd3e5fa981fa1499",
        "name": "alertTemp",
        "mode": "link",
        "links": [
            "4e1e1be67817473a"
        ],
        "x": 835,
        "y": 1520,
        "wires": []
    }
]